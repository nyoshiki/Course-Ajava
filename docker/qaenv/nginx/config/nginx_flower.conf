user    nginx;

worker_processes  auto;
events {
    worker_connections 1024;
    multi_accept on;
    use epoll;
}

error_log   /var/log/nginx/flowerapp_web_error.log warn;
pid         /var/run/nginx.pid;

http {

    include /etc/nginx/mime.types;
    default_type    application/octet-stream;

    log_format ltsv '[$time_iso8601|$remote_addr|$host]'
                    '[$request_method|$https|$request_uri][$status]'
                    '(URI)$uri(QS)$query_string'
                    '(REF)$http_referer(AGENT)$http_user_agent'
                    '(XF)$http_x_forwarded_for'
                    '(RES-TIME)$request_time';

    access_log /var/log/nginx/flowerapp_web_access.log ltsv;

    include /etc/nginx/conf.d/*.conf;

    # リバースプロキシ振分先サーバ群
    # docker-composer_flower.yml のSpring Bootコンテナのipaddressとポート設定と合わせること
    upstream app_server {
        server 172.30.0.30:9110;  #localhost指定するとIPv6の::1にもディスパッチしようとするためIPv4で記載
    }

    # 以後のserver_nameはSpring Booth上jp.flowershop.URLBuilderUtil.javaに
    # ヘッダー偽造によるフィッシング対策として固定で保持しているため
    # 変更する際には同時に変更すること。
    # 合わせてSSL(TLS)証明書を作成している
    # ~/workspaces/flowershop/makecert.shのドメイン名も変更が必要である
    server {
        listen              9100;
        server_name         flowershop.local;
        return              301 https://flowershop.local/;
    }

    server {
        listen              443 ssl;
        server_name         flowershop.local;
        ssl_certificate     /etc/nginx/ssl/flowershop.local.crt; #SSL(TLS)証明書
        ssl_certificate_key /etc/nginx/ssl/flowershop.local.key; #秘密鍵
        ssl_protocols       TLSv1.2; #脆弱性のあるTLS1.0 1.1へのダウングレード接続を許可しない
        charset             UTF-8; 

        sendfile            on;
        tcp_nopush          on;
        keepalive_timeout   65;
        gzip                on;

        location / {
            root    /var/htdocs;
            expires 30d;
        }

        # pass requests for dynamic content to Spring Boot
        location /flowershop {

            # proxy_passは書き方により挙動が異なる点注意
            # location /flowershop/ かつ proxy_pass http://app_server;
            # → http://xxx/flowershop/foo → http://app_server/flowershop/foo
            # location /flowershop/ かつ proxy_pass http://app_server/;
            # → http://xxx/flowershop/foo → http://app_server/foo
            proxy_set_header    Host                $host;
            proxy_set_header    X-Real-IP           $remote_addr;
            #proxy_set_header    X-Forwarded-Proto   https;
            #proxy_set_header    X-Forwarded-Port    443;
            proxy_set_header    X-Forwarded-Host    $server_name;
            #proxy_set_header    X-Forwarded-Server  $server_name;
            proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
            proxy_pass          http://app_server;
            #proxy_pass          http://app_server/;
            proxy_redirect      http:// https://;
            #proxy_redirect      off;
            proxy_send_timeout   120s;
            proxy_read_timeout   120s;
        }

        # serve static files 
        location ~ ^/(images|javascript|js|css|flash|media|static)/  {
            root    /var/htdocs;
            expires 30d;
        }
    }

}
